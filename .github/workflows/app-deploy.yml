---
name: ci-build-and-deploy
on:
  push:
    branches:
      - cirrus
jobs:
  Build:
    runs-on:
      - aro-dev-westus3
    steps:
      - name: Get JFROG Credentials
        id: import-secrets
        uses: hashicorp/vault-action@v2
        with:
          url: https://vault.kyndryl.net
          method: token
          namespace: kyndryl/KYNDRYL_PRACTICES/
          token: ${{secrets.VAULT_TOKEN}}
          tlsSkipVerify: false
          secrets: |
            kps-gd-app-vbac/data/dev/w3us/jfrog  JFROG_USER | JFROG_USER ; 
            kps-gd-app-vbac/data/dev/w3us/jfrog  JFROG_TOKEN | JFROG_TOKEN
      - name: Checkout
        uses: actions/checkout@v3
      - name: Login to Jfrog
        uses: docker/login-action@v2
        with:
          registry: kyndryl.jfrog.io
          username: ${{ steps.import-secrets.outputs.JFROG_USER }}
          password: ${{ steps.import-secrets.outputs.JFROG_TOKEN }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: | 
            kyndryl.jfrog.io/uki-business-intelligence-test-docker-local/vbac:dev_${{ github.run_number }}
  Deploy:
    name: Deploy
    needs:
      - Build
    runs-on:
      - aro-dev-westus3
    steps:
      - name: Checkout Sourcecode
        uses: actions/checkout@v3
      - name: Import JFROG & ARO Secrets
        id: import-secrets
        uses: hashicorp/vault-action@v2
        with:
          url: https://vault.kyndryl.net
          method: token
          namespace: kyndryl/KYNDRYL_PRACTICES/
          token: ${{secrets.VAULT_TOKEN}}
          tlsSkipVerify: false
          secrets: |
            kps-gd-app-vbac/data/dev/w3us/jfrog  JFROG_USER | JFROG_USER ;
            kps-gd-app-vbac/data/dev/w3us/jfrog  JFROG_TOKEN | JFROG_TOKEN ;
            kps-gd-app-vbac/data/dev/w3us/openshift-sa  SERVER_URL | SERVER_URL ;
            kps-gd-app-vbac/data/dev/w3us/openshift-sa  SA_TOKEN | SA_TOKEN ;
            kps-gd-app-vbac/data/dev/w3us/openshift-sa  NAMESPACE | NAMESPACE ;
            kps-gd-app-vbac/data/dev/w3us/sqlserver_wus3 username | DB_USER_NAME ;
            kps-gd-app-vbac/data/dev/w3us/sqlserver_wus3 password | DB_USER_PW
      - name: Login to ARO Cluster
        id: set-aro-context
        uses: redhat-actions/oc-login@v1
        with:
          openshift_server_url: ${{ steps.import-secrets.outputs.SERVER_URL }}
          openshift_token: eyJhbGciOiJSUzI1NiIsImtpZCI6InRUZEpQeHdGSDRxQ3YteDgtQV95SEY3WGcxYkFfcmZOSjB6bjB2eGRSMFEifQ.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJucy1rcGVzLWdkLWtwcy1kZXYtd3VzMyIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VjcmV0Lm5hbWUiOiJzYS1rcGVzLWdkLWtwcy1kZXYtd3VzMy10b2tlbi1xY2tzdyIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VydmljZS1hY2NvdW50Lm5hbWUiOiJzYS1rcGVzLWdkLWtwcy1kZXYtd3VzMyIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VydmljZS1hY2NvdW50LnVpZCI6IjhlYTJmZmVjLWNhMjgtNDg2NS1iOTJjLTU0ZjM5MTU1ZmNiOCIsInN1YiI6InN5c3RlbTpzZXJ2aWNlYWNjb3VudDpucy1rcGVzLWdkLWtwcy1kZXYtd3VzMzpzYS1rcGVzLWdkLWtwcy1kZXYtd3VzMyJ9.TocUN_0WKDqKVyNfi1R6ogxm4s8NqRg3UOROSbbO3vJ6uR4zUDemsVziZisIdvWHLUXrt_0JlWnXkVRDpk4NSM9lkL3GajZ5ZPKnEsCEAiNoPiRhUGMh9bISw9W4sLwBArfz6IYWEJ18TdQwS8X4P4CL9Tuhu-9biAmJ3CuO6h0hhBbXjNw2Kv84HxWe6P1-NV2OvQeSJveHCLaUwfpSIPnPr8hFZLPf-8tG-ShOnjjmViEq6MH7C2eDZoBNZRgmmbKjCV7a1HK1oQiEnvoeHrrVfJZDLOZTJGzIx8rUl3pwy9IXxSfAYvi6KFYE20QGnyRVpeoptW0b8Jq3e5c-3_ufjF5MhhCydU_HeIZA_Tcnen0uf_FNuGHqbqPYkZd2Lxi1wN8P7ynulAGiJCBmyswFqqgl4vqSNyf8FZSPXkClLWmp2BWuxomkOUXnqRNHKmwq7mWATiENkPE-zpqalhA3lwAsPBb4gTzmGb2QGM2qdtiA6EffKoWj3HbyXwxr8yRhht5BKn5ziGbzsJbvSs5RHVgZlDHrJpwkZFqlBeEowbGQL3XdR0DCg_3kBZ4pKP9nLrKdu7cRaj-quXOPlEziJXbRgS_A58YGl3ysqYkou3Zt5Up2gJaHMjhkTL5ZXug17-qp13GSWaYab3o4ONLLUeurD-BK-b29hVW6Rjw
          insecure_skip_tls_verify: true
          namespace: ${{ steps.import-secrets.outputs.NAMESPACE }}
      - name: Set ImagePullSecrets
        id: image_secret
        uses: Azure/k8s-create-secret@v4.0
        with:
          namespace: ${{ steps.import-secrets.outputs.NAMESPACE }}
          secret-name: vbac-app-docker-secrets
          container-registry-url: kyndryl.jfrog.io
          container-registry-username: ${{ steps.import-secrets.outputs.JFROG_USER }}
          container-registry-password: ${{ steps.import-secrets.outputs.JFROG_TOKEN }}
      - name: Set ImagePullSecrets 2
        id: image_secret-2
        uses: azure/k8s-actions/k8s-create-secret@master
        # uses: Azure/k8s-create-secret@v4.0
        with:
          namespace: ${{ steps.import-secrets.outputs.NAMESPACE }}
          secret-name: vbac-app-docker-secrets-generic
          secret-type: 'generic'
          arguments: --from-literal=db-user-name=${{ steps.import-secrets.outputs.DB_USER_NAME }} --from-literal=db-user-pw=${{ steps.import-secrets.outputs.DB_USER_PW }}          
      - name: Deploy application
        id: deploy-app
        uses: Azure/k8s-deploy@v4
        with:
          namespace: ${{ steps.import-secrets.outputs.NAMESPACE }}
          images: |
            kyndryl.jfrog.io/uki-business-intelligence-test-docker-local/vbac:dev_${{ github.run_number }}
          # Path to the manifest files to be used for deployment. 
          manifests: |
            ./env-configmap.yml
            ./env-secrets.yml
            ./myapp-deployment.yml
            ./myapp-service.yml
            ./myapp-sn-dev_route.yml
          # Multiline input where each line contains the name of a docker-registry secret 
          # that has already been setup within the cluster. 
          # Each of these secret names are added under imagePullSecrets field for the workloads found in the input manifest files
          imagepullsecrets: |
            vbac-app-docker-secrets
            vbac-app-docker-secrets-generic
            env-configmap
            env-secrets

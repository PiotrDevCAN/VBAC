<?php

use itdq\BlueMail;
use itdq\DbTable;
use vbac\allTables;
use vbac\personRecord;

ini_set('display_errors', 1);
ini_set('display_startup_errors', 1);
error_reporting(E_ALL);

set_time_limit(0);
ini_set('memory_limit','3072M');

$notFound = personRecord::NOT_FOUND;

$_ENV['email'] = 'on';

$timeMeasurements = array();
$start =  microtime(true);

$startPhase1 = microtime(true);
$allEntriesNotFound = array();
$predicate = " BM.BUSINESS_TITLE IS NULL AND P.BUSINESS_TITLE NOT LIKE '" . personRecord::NOT_FOUND . "' ";
$sql = " SELECT DISTINCT P.BUSINESS_TITLE, P.KYN_EMAIL_ADDRESS ";
$sql.= " FROM " . $GLOBALS['Db2Schema'] . "." . allTables::$PERSON . " AS P ";
$sql.= " LEFT JOIN " . $GLOBALS['Db2Schema'] . "." . allTables::$BUSINESS_TITLE_MAPPING . " AS BM ";
$sql.= " ON P.BUSINESS_TITLE LIKE CONCAT(BM.BUSINESS_TITLE, ',%') ";
$sql.= " WHERE 1=1 AND " . $predicate;

$rs = sqlsrv_query($GLOBALS['conn'], $sql);

if($rs){
    while ($row = sqlsrv_fetch_array($rs, SQLSRV_FETCH_ASSOC)){
        $allEntriesNotFound[trim($row['BUSINESS_TITLE'])] = trim($row['KYN_EMAIL_ADDRESS']);
    }
} else {
    DbTable::displayErrorMessage($rs, 'class', 'method', $sql);
    $errorMessage = ob_get_clean();
    echo json_encode($errorMessage);
    exit();
}

$allEntriesNotFoundCounter = count($allEntriesNotFound);
$endPhase1 = microtime(true);
$timeMeasurements['phase_1'] = (float)($endPhase1-$startPhase1);

$now = new \DateTime();
$pesEmailFound = "<h4>Generated by vBac: " . $now->format('jS M Y') . "</h4>";
$pesEmailFound.= "<table border='1' style='border-collapse:collapse;'>";
$pesEmailFound.= "<thead style='background-color: #cce6ff; padding:25px;'><tr><th style='padding:25px;'>Business Title</th><th style='padding:25px;'>Email Address</th></tr></thead><tbody>";

foreach ($allEntriesNotFound as $businessTitle => $email) {
    $pesEmailFound.="<tr><td style='padding:15px;'>" . $businessTitle . "</td><td style='padding:15px;'>" . $email . "</td></tr>";
}

$pesEmailFound.="</tbody></table>";
$pesEmailFound.= "<style> th { background:red; padding:15px; } </style>";

$end = microtime(true);
$timeMeasurements['overallTime'] = (float)($end-$start);

$to = array($_ENV['devemailid']);
$cc = array();
if (strstr($_ENV['environment'], 'vbac')) {
    $cc[] = 'Anthony.Stark@kyndryl.com';
    $cc[] = 'philip.bibby@kyndryl.com';
}

$subject = 'Recheck missing Bands timings';

$message = 'Related vBAC Environment: ' . $GLOBALS['Db2Schema'];

$message .= '<HR>';

$message .= '<BR/>Number of Business Titles not matched to any band: ' . $allEntriesNotFoundCounter;

$message .= '<HR>';

$message .= '<BR/>Time of obtaining records: ' . $timeMeasurements['phase_1'];

$message .= '<BR/>Overall time: ' . $timeMeasurements['overallTime'];

$message .= '<HR>';

$message .= $pesEmailFound;

$replyto = $_ENV['noreplyemailid'];
$resonse = BlueMail::send_mail($to, $subject, $message, $replyto, $cc);